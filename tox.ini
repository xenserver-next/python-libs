# Managing a Project's Virtualenvs with tox
# A comprehensive beginner's introduction to tox.
# Tox is a great tool for standardising and automating any development task
# that benefits from being run in an isolated virtualenv:
# https://www.seanh.cc/2018/09/01/tox-tutorial/

# To run the tests for all supported and installed python version:
# run: sudo dnf install tox && tox -r -epy27 -epy3{6,7,8,9,10,11,12} # or pass no args
# On Fedora, tox.rpm installs all Python versions, otherwise use pyenv to install them:
# https://brandonrozek.com/blog/pyenvtox/
# https://realpython.com/intro-to-pyenv/

# Note: virtualenv 20.22 broke support for the py27 venv with tox. (at least in some setups)
# As a workaround, downgrade it to 20.21 if that happens: pip3 install -U 'virtualenv<20.22'
# For testing on newer Ubuntu hosts (e.g. 22.04) which have python2-dev, but not pip,
# install pip2 this way:
# curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
# sudo python2 get-pip.py

[tox]
skipsdist = true
isolated_build = true
envlist = py27, py36, py37, py38, py39, py310, py311, py312, mypy

[pytest]
# Needed to make pytest find ./branding.py which differs between XenServer and xcp-ng:
pythonpath = .

[testenv]
description = Run the pytest driver with {basepython}
passenv = PYTEST_ADDOPTS, PYTEST_XDIST_WORKER_COUNT
deps = -r requirements-dev.txt
commands = pytest tests/

[testenv:mypy]
description = Run mypy type check with {basepython}
passenv = TERM, MYPY_FORCE_COLOR, MYPY_FORCE_TERMINAL_WIDTH
deps =
    lxml
    mypy
    types-mock
    types-simplejson
    types-six
allowlist_externals = cat
commands =
    mypy --txt-report .
    cat index.txt

# Map the github python versions to environments to testenvs to run on them:
# See https://github.com/ymyzk/tox-gh-actions for details:
# https://github.com/ymyzk/tox-gh-actions#tox-gh-actions-configuration
# The benefit of using tox is that all versions can be run locally and
# the local venvs will be the same as the venvs created by tox on the GitHub runners:
[gh-actions]
python =
    2.7: py27
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311, mypy