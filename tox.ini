[tox]
envlist = py311-pyre, py310-pytype, py39-check, py27-test, py38-lint, py37-test, py36-test
isolated_build = true
skip_missing_interpreters = true

# TODO later: Enable the venv_update extension so that changes to requirements-dev.txt
# are automatically detected.
tox_pip_extensions_ext_venv_update = true

[test]
description = Run pytest in this environment with --cov for use in other stages
extras      = test
commands    =
    pytest --cov -v
    ls -l {env:COVERAGE_FILE}

[testenv]
description = Run in a {basepython} virtualenv:
    cov:        {[cov]description}
    covcombine: {[covcombine]description}
    covcp:      Copy the generated .converage and coverage.xml to the UPLOAD_DIR dir
    fox:        {[fox]description}
    lint:       {[lint]description}
    test:       {[test]description}
    # https://pypi.org/project/pyre-check/ pyre intro: https://youtu.be/0FSXS5kw2m4
    pyre:       Run pyre for static analyis, only passes using: tox -e py311-pyre
    check:      Run mypy for static analyis
    pytype:     Run pytype for static analyis, intro: https://youtu.be/abvW0mOrDiY
# checkers(mypy) need the pytest dependices as well:
extras =
    {cov,covcp,covcombine,fox,check,lint,test,pytype,pyre}: {[test]extras}
    {cov,covcp,covcombine,fox}:                           {[cov]extras}
deps =
    {py27-test,py27-cov}: pyftpdlib
    {cov,covcp,covcombine,fox}: coverage[toml]
    {cov,covcp,covcombine,fox}: diff-cover
    {lint,fox}: {[lint]deps}
    check: {[check]deps}
    pyre: pyre-check
    pyre: pyre-extensions
    pytype: {[check]deps}
    pytype: {[pytype]deps}
    lint: diff-cov-lint
allowlist_externals =
    {cov,covcp,covcombine,fox,check,lint,test,pytype,pyre}: ls
    {cov,covcp,covcombine,fox}: cp
    {covcombine,fox}: tox
    {covcombine,fox,test,lint,check,pyre}: sh
    check: cat
    fox: firefox
passenv =
    pytype: GITHUB_STEP_SUMMARY
    pytype: GITHUB_SERVER_URL
    pytype: GITHUB_REPOSITORY
    pytype: GITHUB_REF_NAME
    test: PYTEST_ADDOPTS
    test: PYTEST_XDIST_WORKER_COUNT
    covcp: UPLOAD_DIR
    covcp: HOME
    check: MYPY_FORCE_COLOR
    check: MYPY_FORCE_TERMINAL_WIDTH
    pyre: PYRE_TYPESHED
    {fox,check,pytype}: TERM
    fox: DISPLAY
    fox: XAUTHORITY
    fox: DBUS_SESSION_BUS_ADDRESS
setenv =
    PYTHONPATH=stubs
    PYTHONWARNINGS=ignore:DEPRECATION
    COVERAGE_FILE={envlogdir}/.coverage
    {[cov]setenv}
commands =
    {cov,covcp,covcombine,check,fox,lint,test,pytype}: {[test]commands}
    {cov,covcp,covcombine}: {[cov]commands}
    covcp: cp -av {envlogdir}/coverage.xml {env:UPLOAD_DIR:.}
    covcombine: {[covcombine]commands}
    pytype: {[pytype]commands}
    lint: {[lint]commands}
    pyre: {[pyre]commands}
    check: {[check]commands}
    fox: {[covcombine]commands}
    fox: {[lint]commands}
    fox: {[fox]commands}

[cov]
description = Generate coverage html reports (incl. diff-cover) for this environment
setenv      = PY3_DIFFCOVER_OPTIONS=--ignore-whitespace --show-uncovered
       py27:  PY3_DIFFCOVER_OPTIONS=
extras      = coverage
commands    =
    coverage xml  -o {envlogdir}/coverage.xml  --fail-under {env:XCP_COV_MIN:68}
    coverage html -d {envlogdir}/htmlcov
    coverage html -d {envlogdir}/htmlcov-tests --fail-under {env:TESTS_COV_MIN:96} \
                              --include="tests/*"
    diff-cover --compare-branch=origin/master       \
      {env:PY3_DIFFCOVER_OPTIONS} --fail-under {env:DIFF_COV_MIN:93}   \
      --html-report  {envlogdir}/coverage-diff.html \
                     {envlogdir}/coverage.xml

[covcombine]
description = Generate combined coverage reports with py27-test coverage merged
commands =
    tox -e py27-test
    sh -c 'export COVERAGE_FILE=$COVERAGE_FILE-combined; \
    coverage combine --keep {envlogdir}/../../py27-test/log/.coverage {envlogdir}/.coverage;\
    coverage xml  -o {envlogdir}/coverage.xml;\
    coverage html -d {envlogdir}/htmlcov;\
    coverage html -d {envlogdir}/htmlcov-tests --include="tests/*"'
    diff-cover --compare-branch=origin/master                                         \
      --ignore-whitespace --show-uncovered --fail-under {env:DIFF_COVCOMBINE_MIN:100} \
      --html-report  {envlogdir}/coverage-diff.html                                   \
                     {envlogdir}/coverage.xml

[lint]
description = Run pylint and fail on warnings remaining on lines in the diff to master
deps = pylint
    diff-cover
    diff-cov-lint
commands =
    pylint --output  {envlogdir}/pylint.txt --exit-zero                               \
        --msg-template='\{path\}:\{line\}: [\{msg_id\}(\{symbol\}), \{obj\}] \{msg\}' \
        --disable=C,R,W0149,W0160,W0707 xcp/ tests/
    diff-quality --compare-branch=origin/master --violations=pylint                   \
      --ignore-whitespace --fail-under 100                                            \
      --html-report  {envlogdir}/pylint-diff.html {envlogdir}/pylint.txt
    pylint --enable-all-extensions --disable=C,R,W0149,W0160,W0707 --exit-zero        \
           --output {envlogdir}/pylint-warnings.txt xcp/ tests/
    sh -c "diff-cov-lint origin/master .                                         \
       --lint_report={envlogdir}/pylint-warnings.txt                             \
                   > {envlogdir}/pylint-warnings-on-changed-lines.txt"
    sh -c 'if grep / {envlogdir}/pylint-warnings-on-changed-lines.txt;then       \
                 cat {envlogdir}/pylint-warnings-on-changed-lines.txt;exit 5;fi'

[fox]
description = Generate combined coverage html reports and open them in firefox
commands = firefox   {envlogdir}/coverage-diff.html       \
                     {envlogdir}/htmlcov/index.html       \
                     {envlogdir}/htmlcov-tests/index.html \
                     {envlogdir}/pylint-warnings.txt      \
                     {envlogdir}/pylint-warnings-on-changed-lines.txt \
                     {envlogdir}/pylint-diff.html

# Map the github python versions to fators to run only matching envs from [tox]:envlist
# See https://github.com/ymyzk/tox-gh-actions for details:
# https://github.com/ymyzk/tox-gh-actions#tox-gh-actions-configuration
# The benefit of using tox is that all versions can be run locally and
# the local venvs will be the same as the venvs created by tox on the GitHub runners:
[gh-actions]
python =
    2.7: py27
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[check]
deps =
    lxml
    mypy
    mypy-extensions
    typing_extensions
    types-mock
    types-simplejson
    types-six
commands =
    mypy --txt-report .
    cat index.txt

[pyre]
commands =
    pyre: python3.11 --version -V # Needs py311-pyre, does not work with py310-pyre
    {[test]commands}
    python ./run-pyre.py

[pytype]
deps = pytype
    pandas
commands =
    python3.10 --version -V # Needs py310, does not work with py311
    python ./run-pytype.py
