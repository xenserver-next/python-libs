# actions can be run locally using act and docker, on Fedora 37 also with podman, using:
# https://github.com/nektos/act
# sudo dnf install -y act-cli podman-docker
# act --bind --container-daemon-socket $XDG_RUNTIME_DIR/podman/podman.sock -W .github/workflows/main.yml

name: Unit tests

# Checks can be skipped by adding "skip-checks: true" to a commit message,
# or requested by adding "request-checks: true" if disabled by default for pushes:
# https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks#skipping-and-requesting-checks-for-individual-commits
on: [push, pull_request]
env:
  PYTHONWARNINGS: "ignore"
  PIP_ROOT_USER_ACTION: "ignore"  # For local testing using act-cli (see notes above)

jobs:
  test:
    strategy:
      max-parallel: 1
      matrix:
        include:
        - python-version: '3.11'
          os: ubuntu-latest
        - python-version: '2.7'
          os: ubuntu-20.04
        - python-version: '3.10'
          os: ubuntu-latest
        - python-version: '3.9'
          os: ubuntu-latest
        - python-version: '3.8'
          os: ubuntu-latest
        - python-version: '3.7'
          os: ubuntu-latest
        - python-version: '3.6'
          os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed by diff-cover to get the changed lines: origin/master..HEAD
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install development dependencies and the package itself
        run: |
          python -m pip install --quiet --upgrade pip
          pip install --quiet -r requirements-dev.txt .

      - name: Post a pylint Report on the Action's summary page
        if: ${{ matrix.python-version == '3.9' }}
        run: |
          pip install --quiet pandas tabulate
          tool=github-action-pylint-report.py
          repo=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          tree=$repo/tree/$GITHUB_REF_NAME
          ./github-action-pylint-report.py xcp pylint-report.md $tree
          message_count=`tail -1 pylint-report.md|cut -d'|' -f2`
          if [ -e $GITHUB_STEP_SUMMARY ]; then  #  The "act" local runner does not have this:
              echo -n "### [$tool]($tree/$tool) on **xcp/\\*\\*/*.py**" >>$GITHUB_STEP_SUMMARY
              echo ": #Total Pylint messages: $message_count :rocket: " >>$GITHUB_STEP_SUMMARY
              cat pylint-report.md                                      >>$GITHUB_STEP_SUMMARY
          fi

      - name: Run pytest and generate raw coverage data
        id: coverage
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          PYTHONPATH=$PWD pytest --cov
          coverage xml
          coverage html -d htmlcov-${{ matrix.python-version }}
          coverage html -d htmlcov-tests-${{ matrix.python-version }} --include="tests/*"
          diff-cover --compare-branch=origin/master --html-report coverage-diff-${{ matrix.python-version }}.html coverage.xml
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Run tox for ${{ matrix.python-version }} (and also mypy if 3.11)"
        if: ${{ matrix.python-version != '2.7' }}  # On Ubuntu 20.04 Python2.7, tox is older
        run: |
          set -ex;pip install --quiet --user --upgrade tox tox-gh-actions
          ~/.local/bin/tox  # Runs pytest & mypy in defined environments, simple to run locally

      - name: Pylint
        run: |
          pylint --version
          pylint --exit-zero xcp/ tests/ setup.py
          pylint --exit-zero --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" xcp/ tests/ setup.py > pylint.txt
          diff-quality --compare-branch=origin/master --violations=pylint --html-report pylint-diff-${{ matrix.python-version }}.html pylint.txt

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: github.event_name == 'pull_request' && steps.coverage.outcome == 'success'

      - uses: actions/upload-artifact@v3
        if: ${{ !env.ACT }}  # skip during local actions testing using act-cli
        with:
          name: Coverage and pylint reports
          path: |
            coverage-diff-${{ matrix.python-version }}.html
            pylint-diff-${{ matrix.python-version }}.html
            htmlcov-${{ matrix.python-version }}
            htmlcov-tests-${{ matrix.python-version }}
